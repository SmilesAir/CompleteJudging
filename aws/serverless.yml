# serverless.yml
service: CompleteJudging

provider:
  name: aws
  runtime: nodejs6.10
  region: us-west-2
  stage: ${opt:stage, "development"}

  environment:
    ACTIVE_TOURNAMENT_KEYS: ${self:provider.stage}-activeTournamentKeys
    TOURNAMENT_INFO: ${self:provider.stage}-tournamentInfo

  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ACTIVE_TOURNAMENT_KEYS}"
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TOURNAMENT_INFO}"

functions:
  testLambda:
    handler: source/test.testLambda
    events:
      - http:
          path: testPost
          method: post
          cors: true
  createTournament:
    handler: source/createTournament.handler
    events:
      - http:
          path: createTournament
          method: post
          cors: true
  hideTournament:
    handler: source/createTournament.handler
    events:
      - http:
          path: hideTournament
          method: post
          cors: true
  finishTournament:
    handler: source/createTournament.handler
    events:
      - http:
          path: finishTournament
          method: post
          cors: true

resources:
  Resources:
    activeTournamentKeys:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ACTIVE_TOURNAMENT_KEYS}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    tournamentInfo:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TOURNAMENT_INFO}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
